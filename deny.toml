targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "x86_64-unknown-linux-musl" },
    { triple = "x86_64-pc-windows-msvc" },
]

[advisories]
vulnerability = "deny"
unmaintained = "deny"
yanked = "deny"
ignore = []

[licenses]
unlicensed = "deny"
allow = [
    "MIT",
    "Apache-2.0",
    # Unfortunately, encoding brings in a lot of crates with this license
    "CC0-1.0",
]
copyleft = "deny"
allow-osi-fsf-free = "neither"
default = "deny"
confidence-threshold = 0.8
exceptions = [{ allow = ["Unicode-DFS-2016"], name = "unicode-ident" }]

# Some crates don't have (easily) machine readable licensing information,
# adding a clarification entry for it allows you to manually specify the
# licensing information
#[[licenses.clarify]]
# The name of the crate the clarification applies to
#name = "ring"
# The optional version constraint for the crate
#version = "*"
# The SPDX expression for the license requirements of the crate
#expression = "MIT AND ISC AND OpenSSL"
# One or more files in the crate's source used as the "source of truth" for
# the license expression. If the contents match, the clarification will be used
# when running the license check, otherwise the clarification will be ignored
# and the crate will be checked normally, which may produce warnings or errors
# depending on the rest of your configuration
#license-files = [
# Each entry is a crate relative path, and the (opaque) hash of its contents
#{ path = "LICENSE", hash = 0xbd0eed23 }
#]

[bans]
multiple-versions = "deny"
deny = []
skip = [
    # The crate is in the repo, so we have the path, but it's also a crates.io
    # dependency
    { name = "crash-context" },
    # range-map uses an old version, and is unfortunately unmaintained and has
    # not seen a release in 5 years
    { name = "num-traits", version = "=0.1.43" },
]
skip-tree = [
    # parking_lot is out of date again
    { name = "windows-sys", version = "=0.34" },
]

[sources]
unknown-registry = "deny"
unknown-git = "deny"
allow-git = []
