//! Bindings generated by `minwin` 0.1.0
#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    clippy::upper_case_acronyms
)]
#[link(name = "kernel32", kind = "raw-dylib")]
extern "system" {
    #[link_name = "GetProcAddress"]
    pub fn get_proc_address(module: Hmodule, proc_name: Pcstr) -> Farproc;
    #[link_name = "GetProcessHeap"]
    pub fn get_process_heap() -> HeapHandle;
    #[link_name = "HeapFree"]
    pub fn heap_free(
        heap: HeapHandle,
        flags: HeapFlags::Enum,
        mem: *const ::core::ffi::c_void,
    ) -> Bool;
    #[link_name = "LoadLibraryA"]
    pub fn load_library_a(lib_file_name: Pcstr) -> Hmodule;
}
pub type Bool = i32;
pub type Farproc = ::core::option::Option<unsafe extern "system" fn() -> isize>;
pub mod HeapFlags {
    pub type Enum = u32;
}
pub type HeapHandle = isize;
pub type Hmodule = isize;
pub type Pcstr = *const u8;
